#BlueJ class context
comment0.target=Behaviour
comment0.text=\r\n\ Behaviour\:\ an\ abstract\ class\ that\ defines\ the\ basic\ behaviour\ of\ the\ pets\ that\ will\ extend\ it.\ This\ contains\ helper\ classes\r\n\ to\ access\ the\ token\ methods\ to\ update\ its\ properties\ or\ general\ helper\ methods\ to\ generate\ random\ starting\ positions\ and/or\ speeds\r\n\ \r\n\ @author\ Chris\ Williams\r\n\ @version\ 3.0\r\n
comment1.params=_rtoken
comment1.target=Behaviour(UserCode.Pets.IToken)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ Behaviour\r\n\ \r\n\ @param\ \ \ _rtoken\ \ \ the\ IToken\ that\ the\ 'pet'\ shall\ interact\ with\ and\ update\ its\ properties\r\n\ \r\n
comment10.params=_oriX\ _oriY\ _oriZ
comment10.target=void\ setOrientation(double,\ double,\ double)
comment10.text=\r\n\ SETTER\r\n\ METHOD\:\ Set\ a\ new\ Orientation\ of\ the\ pet\ on\ the\ x\ y\ and\ z\ axis.\ This\ method\ passes\ the\ values\ in\ the\ params\ to\ the\ Token\r\n\ by\ calling\ the\ setOrientation\ method\ of\ the\ Token\ class\r\n\ \r\n\ @param\ \ \ _oriX\ \ \ a\ double\ for\ the\ x\ Orientation\r\n\ @param\ \ \ _oriY\ \ \ a\ double\ for\ the\ y\ Orientation\r\n\ @param\ \ \ _oriZ\ \ \ a\ double\ for\ the\ z\ Orientation\r\n\ \r\n
comment11.params=
comment11.target=double[]\ getOrientation()
comment11.text=\r\n\ GETTER\r\n\ METHOD\:\ GETTER\ to\ retrieve\ the\ orientation\ of\ the\ pet\r\n\ \r\n\ @return\ \ double[]\ \ \ returns\ the\ value\ of\ the\ orientations\ in\ IToken\ as\ an\ array\ of\ 3\ doubles\r\n\ \r\n
comment12.params=newX\ newY
comment12.target=void\ setPosition(double,\ double)
comment12.text=\r\n\ SETTER\r\n\ METHOD\:\ set\ the\ position\ of\ the\ pet\ on\ the\ x\ and\ y\ axis,\ method\ updates\ the\ IToken\ with\ the\ new\ values.\ It\ will\ set\ the\ Z\r\n\ position\ to\ the\ default\ value\ of\ 1.0\r\n\ \r\n\ @param\ \ \ newX\ \ \ the\ x\ position\ of\ the\ pet\r\n\ @param\ \ \ newY\ \ \ the\ y\ position\ of\ the\ pet\r\n\ \r\n
comment13.params=newX\ newY\ newZ
comment13.target=void\ setPosition(double,\ double,\ double)
comment13.text=\r\n\ OVERLOADED\ SETTER\r\n\ METHOD\:\ set\ the\ position\ of\ the\ pet\ on\ the\ x\ and\ y\ and\ z\ axis,\ method\ updates\ the\ IToken\ with\ the\ new\ values.\r\n\ \r\n\ @param\ \ \ newX\ \ \ the\ x\ position\ of\ type\ double\r\n\ @param\ \ \ newY\ \ \ the\ y\ position\ of\ type\ double\r\n\ @param\ \ \ newZ\ \ \ the\ z\ position\ of\ type\ double\r\n\ \r\n
comment14.params=
comment14.target=double[]\ getPosition()
comment14.text=\r\n\ GETTER\r\n\ METHOD\:\ returns\ x\ y\ and\ z\ fields\ held\ in\ IToken\r\n\ \r\n\ @return\ \ an\ array\ of\ doubles\ {x,y,z}\r\n\ \r\n
comment15.params=_component
comment15.target=void\ addComponent(UserCode.Components.IComponent)
comment15.text=\r\n\ \r\n\ METHOD\:\ used\ to\ add\ new\ IComponents\ to\ the\ _components\ HashMap.\ This\ method\ checks\ if\ it\ already\ exists\ before\ adding\ it\ to\ \r\n\ the\ _components\ HashMap.\r\n\ \r\n\ @param\ \ \ _component\ \ \ the\ new\ component\ to\ add\r\n\ \r\n
comment16.params=
comment16.target=java.util.Map\ getComponents()
comment16.text=\r\n\ GETTER\r\n\ METHOD\:\ used\ to\ return\ the\ HashMap\ _components\ containing\ all\ the\ key,value\ pairs\r\n\ \r\n\ @return\ \ Map\ \ \ the\ HashMap\ of\ the\ _components\ field\r\n\ \r\n
comment17.params=_name
comment17.target=UserCode.Components.IComponent\ getIComponent(java.lang.String)
comment17.text=\r\n\ \r\n\ METHOD\:\ used\ to\ get\ retrieve\ an\ IComponent\ within\ _components\ field.\ This\ method\ will\ return\r\n\ the\ HashMap\ value\ which\ is\ the\ IComponent\r\n\ \r\n\ @param\ \ \ _name\ \ \ the\ 'key'\ String\ name\ of\ the\ component\r\n\ \r\n\ @return\ \ IComponent\ \ \ the\ IComponent\ requested,\ if\ it\ doesn't\ exist\ null\ will\ be\ returned\r\n\ \r\n
comment18.params=_components
comment18.target=void\ Initialise(java.util.List)
comment18.text=\r\n\r\n\ ABSTRACT\r\n\ METHOD\:\ Used\ to\ set-up\ any\ properties\ and\ components\ the\ class\ requires\r\n\ \r\n\ @param\ \ \ an\ arrayList\ of\ IComponents\ the\ Behaviour\ concrete\ class\ requires\ in\ the\ simulation\r\n\r\n
comment19.params=
comment19.target=void\ Terminate()
comment19.text=\r\n\r\n\ METHOD\:\ Used\ to\ tear-down\ any\ active\ threads\ or\ computations\ that\ are\ no\ longer\ needed.\ This\ method\ loops\ through\ all\ the\ _components\r\n\ HashMap\ and\ calls\ the\ Terminate();\ method\ for\ each\ IComponent\r\n\r\n
comment2.params=
comment2.target=void\ generateSpeed()
comment2.text=\r\n\ \r\n\ METHOD\:\ Generate\ a\ random\ speed\ between\ 0.005\ -\ 0.05\ which\ is\ assigned\ to\ the\ _speed\ field\ by\ calling\ the\ RandomNumber\ method\r\n\ generateNumber\ in\ the\ _randomNumber\ field\r\n\ \r\n
comment20.params=
comment20.target=void\ update()
comment20.text=\r\n\ ABSTRACT\r\n\ METHOD\:\ Used\ by\ each\ pet\ to\ run\ through\ any\ IComponents\ they\ have\ and\ any\ additional\ requirements\ they\ have.\r\n\ \ \r\n
comment3.params=s
comment3.target=void\ generateSpeed(java.lang.String)
comment3.text=\r\n\ \r\n\ Overloaded\ method\r\n\ METHOD\:\ Generate\ a\ random\ speed\ based\ on\ the\ string\ passed,\ either\ "slow"\ or\ "fast"\ to\ the\ _speed\ field\r\n\ If\ string\ doesn't\ match,\ the\ method\ calls\ standard\ method\ generateSpeed\ to\ assign\ the\ _speed\ field\r\n\ \r\n\ @param\ \ \ s\ \ \ a\ String,\ either\ "fast"\ or\ "slow"\ to\ generate\ a\ number\r\n
comment4.params=
comment4.target=double\ getSpeed()
comment4.text=\r\n\ GETTER\r\n\ METHOD\:\ Get\ the\ value\ held\ within\ the\ _speed\ field\r\n\ \r\n\ @return\ \ double\ \ \ returns\ the\ field\ _speed\ to\ caller\r\n\ \r\n
comment5.params=s
comment5.target=void\ setScale(double)
comment5.text=\r\n\ SETTER\r\n\ METHOD\:\ Set\ the\ scale\ of\ the\ pet\ within\ the\ aquarium.\ Method\ changes\ values\ held\ within\ the\ _token\ by\ calling\ the\ Token\ method\ setScale\r\n\ This\ method\ catches\ an\ ArgumentOutOfBoundsException\ if\ the\ value\ is\ too\ great\ or\ too\ small\r\n\ \r\n\ @param\ \ \ s\ \ \ a\ double\ representing\ the\ scale\ of\ the\ pet\r\n\ \r\n
comment6.params=
comment6.target=double\ getScale()
comment6.text=\r\n\ GETTER\r\n\ METHOD\:\ returns\ the\ current\ scale\ of\ the\ pet\ by\ calling\ _token\ rtnScale()\r\n\ \r\n\ @return\ \ a\ value\ of\ type\ double\ representing\ the\ scale\r\n\ \r\n
comment7.params=
comment7.target=void\ randomScale()
comment7.text=\r\n\ SETTER\r\n\ METHOD\:\ Set\ a\ random\ scale\ of\ the\ pet\ within\ the\ aquarium\ between\ 0.1\ -\ 0.15.\ Method\ will\ update\ the\ value\ in\ the\ _token\r\n\ \r\n
comment8.params=_placement
comment8.target=void\ setStartPosition(java.lang.String)
comment8.text=\r\n\r\n\ METHOD\:\ Place\ the\ pet\ at\ a\ random\ Y\ axis\ position\ based\ on\ the\ string\ passed,\ either\ "top"\ or\ "bottom",\ \r\n\ default\ places\ pet\ in\ the\ center\ \ \r\n\r\n\ @param\ \ \ _placement\ \ \ of\ type\ string\ representing\ the\ general\ position\ to\ set\ the\ y\ coord\ ("top",\ "bottom")\r\n\r\n
comment9.params=_oriX\ _oriY
comment9.target=void\ setOrientation(double,\ double)
comment9.text=\r\n\ SETTER\r\n\ METHOD\:\ Set\ a\ new\ Orientation\ of\ the\ pet\ on\ the\ x\ and\ y\ axis.\ This\ method\ passes\ the\ values\ in\ the\ params\ to\ the\ Token\r\n\ by\ calling\ the\ setOrientation\ method\ of\ the\ Token\ class.\ It\ will\ set\ a\ default\ value\ of\ 0.0\ for\ the\ Z\ orientation.\r\n\ \r\n\ @param\ \ \ _oriX\ \ \ a\ double\ for\ the\ x\ Orientation\r\n\ @param\ \ \ _oriY\ \ \ a\ double\ for\ the\ y\ Orientation\r\n\ \r\n\ \r\n
numComments=21
