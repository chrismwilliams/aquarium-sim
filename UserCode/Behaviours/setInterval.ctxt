#BlueJ class context
comment0.target=setInterval
comment0.text=\r\n\ setInterval\ class\ defines\ the\ concrete\ implementation\ of\ the\ IIntervalRequest\ interface.\ This\ class\ is\ to\ be\ used\ to\ generate\r\n\ request\ a\ a\ specified\ time,\ otherwise\ it\ will\ select\ one\ between\ 3\ and\ 7\ seconds.\ The\ class\ will\ then\ call\ the\ IComponent\ componentAction()\ method\r\n\ at\ every\ interval\r\n\ \r\n\ @author\ Chris\ Williams\ \r\n\ @version\ 3.0\r\n
comment1.params=request
comment1.target=setInterval(UserCode.Components.IComponent)
comment1.text=\r\n\ Constructor\ for\ objects\ of\ class\ setInterval\r\n\ \r\n\ @param\ \ \ request\ \ \ the\ concrete\ implementation\ of\ an\ IComponent\ that\ will\ be\ informed\ at\ intervals\ via\ the\ componentAction()\ method.\ This\ will\r\n\ default\ to\ a\ time\ between\ 3\ -\ 7\ seconds\r\n\ \r\n
comment2.params=request\ min\ max
comment2.target=setInterval(UserCode.Components.IComponent,\ double,\ double)
comment2.text=\r\n\ \r\n\ Constructor\ for\ objects\ of\ class\ setInterval.\ This\ constructor\ includes\ the\ min\ and\ max\ params\ with\ which\ the\ generateRequest()\ method\ will\ use\r\n\ to\ randomly\ choose\ a\ set\ interval\ request\ between\r\n\ \r\n\ @param\ \ \ request\ \ \ the\ concrete\ implementation\ of\ type\ IComponent\ that\ will\ be\ called\ at\ intervals\ via\ the\ componentAction()\ method.\r\n\ @param\ \ \ min\ \ \ the\ minimum\ amount\ of\ time\ in\ seconds\ that\ generateRequest()\ should\ use\r\n\ @param\ \ \ max\ \ \ the\ maximum\ amount\ of\ time\ in\ seconds\ that\ generateRequest()\ should\ use\r\n\ \r\n
comment3.params=
comment3.target=void\ callRequest()
comment3.text=\r\n\ \r\n\ METHOD\:\ this\ method\ calls\ the\ componentAction\ method\ of\ the\ IComponent\ class\ held\ in\ the\ _requestComponent\ field\ to\ notify\ at\ intervals\ determined\ by\ the\ \r\n\ generateRequest()\ method\r\n\ \r\n
comment4.params=
comment4.target=void\ generateRequest()
comment4.text=\r\n\ \r\n\ METHOD\:\ this\ method\ will\ generate\ an\ event\ at\ set\ intervals\ in\ seconds\ between\ the\ values\ passed\ in\ construction\ (or\ default).\ It\ will\ then\r\n\ call\ the\ callRequest()\ method.\ This\ will\ continue\ unless\ the\ stopRequest\ method\ is\ called.\r\n\ \r\n
comment5.params=
comment5.target=void\ run()
comment6.params=
comment6.target=void\ stopRequest()
comment6.text=\r\n\ \r\n\ METHOD\:\ used\ to\ end\ the\ interval\ request.\ This\ method\ will\ set\ the\ _runnable\ field\ to\ null\ and\ call\ shutdown()\ on\ the\ executor\r\n\ \r\n
comment7.params=
comment7.target=java.util.concurrent.ScheduledExecutorService\ getExecutor()
comment7.text=\r\n\ @Deprecated\r\n\ METHOD\:\ used\ for\ testing\ to\ return\ the\ executor\ field\r\n\ \r\n
comment8.params=
comment8.target=java.lang.Runnable\ getRunnable()
comment8.text=\r\n\ @Deprecated\r\n\ METHOD\:\ used\ for\ testing\ to\ return\ the\ _runnable\ field\r\n\ \r\n
numComments=9
